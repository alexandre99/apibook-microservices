version: '3'
services:
  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - '12999:27017'
    restart: on-failure  
    volumes:
      - '/home/alexandredev/docker-volumes/apibooks-mongodb:/data/db'
    networks: 
      apibook-network:
        aliases:
          - mongodb
      
  config:
    container_name: configServer
    image: alexandredev/config:v1
    build:
      context: ./apibook-cloud-config-server
      dockerfile: Dockerfile
      args:
        APPLICATION_NAME: apibook-config-server.jar
        NUMBER_PORT: 8888
    ports:
      - '8888'
    depends_on:
      - mongodb
    restart: on-failure  
    networks: 
      apibook-network:
        aliases:
          - configServer

  admin:
    container_name: adminServer
    image: alexandredev/admin:v1
    build:
      context: ./apibook-admin-server
      dockerfile: Dockerfile
      args:
        APPLICATION_NAME: apibook-admin-server.jar
        NUMBER_PORT: 9092
    ports:
      - '9092:9092'
    depends_on:
      - config
    environment:
      WAIT_HOSTS: configServer:8888  
    restart: on-failure  
    networks: 
      apibook-network:
        aliases:
          - adminServer
            
  discovery:
    container_name: discoveryServer
    image: alexandredev/discovery:v1
    build:
      context: ./apibook-server-discovery
      dockerfile: Dockerfile
      args:
        APPLICATION_NAME: apibook-discovery-server.jar
        NUMBER_PORT: 8761
    ports:
      - '8761:8761'
    environment:
      WAIT_HOSTS: configServer:8888  
    restart: on-failure  
    depends_on:
      - config
    networks: 
      apibook-network:
        aliases:
          - discoveryServer

  gateway:
    container_name: gatewayServer
    image: alexandredev/gateway:v1
    build:
      context: ./apibook-gateway
      dockerfile: Dockerfile
      args:
        APPLICATION_NAME: apibook-gateway-server.jar
        NUMBER_PORT: 8762
    ports:
      - '8762:8762'
    environment:
      WAIT_HOSTS: configServer:8888,discoveryServer:8761
    restart: on-failure  
    depends_on:
      - config
      - discovery
    networks: 
      apibook-network:
        aliases:
          - gatewayServer

  auth:
    container_name: authServer
    image: alexandredev/auth:v1
    build:
      context: ./auth-service
      dockerfile: Dockerfile
      args:
        APPLICATION_NAME: auth-service-server.jar
        NUMBER_PORT: 8082
    ports:
      - '8082'
    environment:
      WAIT_HOSTS: configServer:8888,discoveryServer:8761,gatewayServer:8762
    restart: on-failure    
    depends_on:
      - config
      - discovery
      - gateway
    networks: 
      apibook-network:
        aliases:
          - authServer

  author:
    container_name: authorServer
    image: alexandredev/author:v1
    build:
      context: ./author-service
      dockerfile: Dockerfile
      args:
        APPLICATION_NAME: author-service-server.jar
        NUMBER_PORT: 8080
    ports:
      - '8080'
    environment:
      WAIT_HOSTS: configServer:8888,discoveryServer:8761,gatewayServer:8762
    restart: on-failure    
    depends_on:
      - config
      - discovery
      - gateway
      - mongodb
    networks: 
      apibook-network:
        aliases:
          - authorServer

  book:
    container_name: bookServer
    image: alexandredev/book:v1
    build:
      context: ./book-service
      dockerfile: Dockerfile
      args:
        APPLICATION_NAME: book-service-server.jar
        NUMBER_PORT: 8081
    ports:
      - '8081'
    environment:
      WAIT_HOSTS: configServer:8888,discoveryServer:8761,gatewayServer:8762,mongodb:27017
    restart: on-failure    
    depends_on:
      - config
      - discovery
      - gateway
      - mongodb
    networks: 
      apibook-network:
        aliases:
          - authorServer
                  
networks: 
  apibook-network:
      driver: bridge